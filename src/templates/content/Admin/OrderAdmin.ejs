<div class="contentTitle clearfix">
  <h3>订单管理</h3>
  <div class="form-group pull-right col-xs-12 col-sm-6 col-md-4" id="tableQuery">
    <div class="form-group col-xs-9">
      <input type="text" class="form-control searchBox" name="search_box" id="search_box" placeholder="在这里输入关键字" />
    </div>
    <button type="submit" class="btn btn-primary col-xs-3 searchBtn">查询</button>
  </div>
</div>

<%-include('/components/contentTabs/tabSwitcher',{tabs:{applying:"申请中",success:"已完成",reject:"已拒绝"}})%>
  <div class="operation-menu">
    <button type="button" class="btn btn-primary" onclick="PurchaseRequisition.view.create()">申领物品</button>
  </div>
  <div class="table-content tab-content">
    <div class="tab-pane" id="applying">
    </div>
    <div class="tab-pane" id="success">
    </div>
    <div class="tab-pane" id="reject">
    </div>
  </div>

  <%-include('/components/modal/modal',{type:"Employee.PurchaseRequisition.PurchaseRequisition"})%>
    <%-include('/components/modal/modal',{type:"Common.Delete"})%>
      <%-include('/components/modal/modal',{type:"Admin.Order.Detail"})%>

        <script>
          //载入我的订单的申请表操作
          var table_init = function() {
            // window.__PurchaseRequisitionItem_Unsave_set = {}
            generateTableWithPageHelper({
              target: "#applying",
              templateOpts: tableStructures.Admin.OrderAdmin.Order,
              counter: apiConfig.PRAdminView.Count(Enum.prstatus.Progress),
              datasourceAPI: apiConfig.PRAdminView.Paging,
              options: {
                status: Enum.prstatus.Progress
              }
            })
            generateTableWithPageHelper({
              target: "#success",
              templateOpts: tableStructures.Admin.OrderAdmin.Success,
              counter: apiConfig.PRAdminView.Count(Enum.prstatus.Completed),
              datasourceAPI: apiConfig.PRAdminView.Paging,
              options: {
                status: Enum.prstatus.Completed
              }
            })
            generateTableWithPageHelper({
              target: "#reject",
              templateOpts: tableStructures.Admin.OrderAdmin.Reject,
              counter: apiConfig.PRAdminView.Count(Enum.prstatus.Rejected),
              datasourceAPI: apiConfig.PRAdminView.Paging,
              options: {
                status: Enum.prstatus.Rejected
              }
            })
          }

          //订单详情操作
          var Detail = function(PRid) {
            console.log(PRid);
            PurchaseRequisition.detail(PRid)
          }
          //复制操作
          var copy = function(PRid) {
            console.log(PRid);
            PurchaseRequisition.view.copy(PRid)
          }

          var edit = function(PRid) {
            console.log(PRid);
            PurchaseRequisition.view.edit(PRid)
            // console.log(6, window.__PurchaseRequisition_tempID, window.__PurchaseRequisitionItem_Unsave_set[window.__PurchaseRequisition_tempID])
          }

          var deleteDraft = function(PRid) {
            PurchaseRequisition.view.delete(PRid)
          }

          var search = function() {
            var keyword = filterXSS($("input#search_box").val().trim())
            if ("" == keyword) {
              table_init()
              return
            }
            generateTableWithPageHelper({
              target: "#applying",

              templateOpts: tableStructures.Admin.OrderAdmin.Order,
              counter: apiConfig.purchaserequisition.Count(),
              datasourceAPI: apiConfig.purchaserequisition.SearchByKeywordAndStatus,
              options: {
                keyword: keyword,
                role: getCookie("role"),
                uid: getCookie('uid'),
                status: Enum.prstatus.Progress
              }
            })
            generateTableWithPageHelper({
              target: "#success",
              templateOpts: tableStructures.Admin.OrderAdmin.Success,
              counter: apiConfig.purchaserequisition.Count(),
              datasourceAPI: apiConfig.purchaserequisition.SearchByKeywordAndStatus,
              options: {
                keyword: keyword,
                role: getCookie("role"),
                uid: getCookie('uid'),
                status: Enum.prstatus.Completed
              }
            })
            generateTableWithPageHelper({
              target: "#reject",

              templateOpts: tableStructures.Admin.OrderAdmin.Reject,
              counter: apiConfig.purchaserequisition.Count(),
              datasourceAPI: apiConfig.purchaserequisition.SearchByKeywordAndStatus,
              options: {
                keyword: keyword,
                role: getCookie("role"),
                uid: getCookie('uid'),
                status: Enum.prstatus.Rejected
              }
            })

          }
        </script>
